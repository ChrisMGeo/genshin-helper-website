{"version":3,"file":"static/js/128.aebe4a89.chunk.js","mappings":"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","sources":["components/CloseButton.tsx","components/ThumbSide.tsx","components/CharSelectDropdown.tsx","components/CardLight.tsx","components/SkillTalentCard.tsx","components/PassiveTalentCard.tsx","components/ConstellationCard.tsx","pages/PageCharacter.tsx"],"sourcesContent":["import { Close } from \"@mui/icons-material\";\nimport { Button, ButtonProps } from \"@mui/material\";\ntype CloseButtonProps = ButtonProps & {\n  large?: boolean;\n};\nconst CloseButton = ({ large = false, ...props }: CloseButtonProps) => {\n  if (large)\n    return (\n      <Button variant=\"outlined\" color=\"error\" startIcon={<Close />} {...props}>\n        Close\n      </Button>\n    );\n  return (\n    <Button\n      variant=\"outlined\"\n      color=\"error\"\n      sx={{ p: 1, minWidth: 0 }}\n      {...props}\n    >\n      <Close />\n    </Button>\n  );\n};\nexport default CloseButton;\n","import { styled } from \"@mui/material\";\n\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\n  display: \"inline-block\",\n  width: \"auto\",\n  height: `2.3em`,\n  lineHeight: 1,\n  verticalAlign: \"text-bottom\",\n  marginTop: theme.spacing(-3),\n  marginLeft: theme.spacing(-1.25),\n  marginRight: theme.spacing(-1),\n  marginBottom: theme.spacing(-1),\n}));\n\nexport default ThumbSide;\n","import { Button, Menu, MenuItem } from \"@mui/material\";\nimport { useState } from \"react\";\nimport characterAssets from \"../data/Characters\";\nimport { CharacterKey, ElementKey } from \"../types/consts\";\nimport ThumbSide from \"./ThumbSide\";\nimport { allCharacters } from \"../types/api\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface CharSelectDropdownProps {\n  characterKey: CharacterKey;\n  characterName?: string;\n  color?:\n    | \"success\"\n    | \"inherit\"\n    | \"primary\"\n    | \"secondary\"\n    | \"error\"\n    | \"info\"\n    | \"warning\"\n    | ElementKey;\n}\n\nconst CharSelectDropdown = ({\n  characterKey,\n  characterName,\n  color = \"success\",\n}: CharSelectDropdownProps) => {\n  const navigate = useNavigate();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleClose = (charKey?: string) => {\n    setAnchorEl(null);\n    if (charKey) navigate(`/${charKey}`);\n  };\n  return (\n    <>\n      <Button\n        sx={{ borderRadius: 4 }}\n        id=\"character-select-button\"\n        onClick={handleClick}\n        color={color}\n        variant=\"outlined\"\n        aria-controls={open ? \"basic-menu-open\" : \"basic-menu-close\"}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : \"false\"}\n        startIcon={\n          <ThumbSide\n            src={characterAssets[characterKey].IconSide}\n            alt={characterName}\n          />\n        }\n      >\n        {characterName ?? \"Select a Character\"}\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={() => handleClose()}\n        MenuListProps={{ \"aria-labelledby\": \"character-select-button\" }}\n      >\n        {allCharacters.map((char) => (\n          <MenuItem\n            key={`${char.id}`}\n            onClick={() => handleClose(char.characterKey)}\n            selected={characterKey === char.characterKey}\n          >\n            {char.name}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\nexport default CharSelectDropdown;\n","import { Card, styled } from \"@mui/material\";\n\nconst CardLight = styled(Card)(({}) => ({\n  backgroundColor: \"rgba(0,0,0,0)\",\n}));\n\nexport default CardLight;\n","import {\n  Avatar,\n  CardActionArea,\n  CardHeader,\n  Collapse,\n  Typography,\n} from \"@mui/material\";\nimport { CharacterKey, WeaponTypeKey } from \"../types/consts\";\nimport { getWeaponIcon } from \"../types/icons\";\nimport CardLight from \"./CardLight\";\nimport characterAssets from \"../data/Characters\";\nimport { TravelerElementKey } from \"../types/traveler\";\nimport CardContentEvenPadding from \"./CardContentEvenPadding\";\nimport { useState } from \"react\";\nimport { CharacterEx, SkillTalent } from \"../types/Character\";\n\ninterface SkillTalentCardProps {\n  skillTalent: SkillTalent;\n  characterInfo: CharacterEx;\n  characterKey: CharacterKey;\n  travelerElement: TravelerElementKey;\n}\nconst SkillTalentCard = ({\n  skillTalent,\n  characterInfo,\n  characterKey,\n  travelerElement,\n}: SkillTalentCardProps) => {\n  const [expanded, setExpanded] = useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  const skillType =\n    skillTalent.type === \"ELEMENTAL_SKILL\"\n      ? \"Skill\"\n      : skillTalent.type === \"ELEMENTAL_BURST\"\n      ? \"Burst\"\n      : \"Sprint\";\n  return (\n    <CardLight sx={{ borderRadius: 4 }}>\n      <CardActionArea onClick={handleExpandClick}>\n        <CardHeader\n          title={\n            <Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>\n              {skillTalent.name}\n            </Typography>\n          }\n          avatar={\n            <Avatar\n              src={\n                skillTalent.type === \"NORMAL_ATTACK\"\n                  ? getWeaponIcon(\n                      characterInfo.weapon_type.toLowerCase() as WeaponTypeKey\n                    )\n                  : characterKey !== \"Traveler\"\n                  ? characterAssets[characterKey][skillType]\n                  : characterAssets.Traveler.elements[travelerElement][\n                      skillType\n                    ]\n              }\n              alt={\n                skillTalent.type === \"NORMAL_ATTACK\"\n                  ? \"Normal Attack\"\n                  : skillType\n              }\n            />\n          }\n        ></CardHeader>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContentEvenPadding sx={{ whiteSpace: \"pre-wrap\" }}>\n            <Typography\n              variant=\"body1\"\n              dangerouslySetInnerHTML={{\n                __html: skillTalent.description\n                  .split(\"\\n\")\n                  .map((line: string) =>\n                    line.split(\" \").length >= 4 ? line : `<b>${line}</b>`\n                  )\n                  .join(\"\\n\"),\n              }}\n            ></Typography>\n          </CardContentEvenPadding>\n        </Collapse>\n      </CardActionArea>\n    </CardLight>\n  );\n};\nexport default SkillTalentCard;\n","import {\n  Avatar,\n  CardActionArea,\n  CardHeader,\n  Collapse,\n  Typography,\n} from \"@mui/material\";\nimport { CharacterKey } from \"../types/consts\";\nimport CardLight from \"./CardLight\";\nimport characterAssets from \"../data/Characters\";\nimport { TravelerElementKey } from \"../types/traveler\";\nimport CardContentEvenPadding from \"./CardContentEvenPadding\";\nimport { useState } from \"react\";\nimport { PassiveTalent } from \"../types/Character\";\n\ninterface PassiveTalentCardProps {\n  passiveTalent: PassiveTalent;\n  characterKey: CharacterKey;\n  travelerElement: TravelerElementKey;\n  index: 1 | 2 | 3 | 4;\n}\nconst PassiveTalentCard = ({\n  passiveTalent,\n  characterKey,\n  travelerElement,\n  index,\n}: PassiveTalentCardProps) => {\n  const [expanded, setExpanded] = useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  return (\n    <CardLight sx={{ borderRadius: 4 }}>\n      <CardActionArea onClick={handleExpandClick}>\n        <CardHeader\n          title={\n            <Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>\n              {passiveTalent.name}\n            </Typography>\n          }\n          avatar={\n            <Avatar\n              src={\n                characterKey !== \"Traveler\"\n                  ? characterKey === \"SangonomiyaKokomi\"\n                    ? characterAssets[characterKey][`Passive${index}`]\n                    : characterAssets[characterKey][\n                        `Passive${index as 1 | 2 | 3}`\n                      ]\n                  : characterAssets.Traveler.elements[travelerElement][\n                      `Passive${index}`\n                    ]\n              }\n              alt={`Passive${index}`}\n            />\n          }\n        ></CardHeader>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContentEvenPadding sx={{ whiteSpace: \"pre-wrap\" }}>\n            <Typography variant=\"body1\">{passiveTalent.description}</Typography>\n          </CardContentEvenPadding>\n        </Collapse>\n      </CardActionArea>\n    </CardLight>\n  );\n};\nexport default PassiveTalentCard;\n","import {\n  Avatar,\n  CardActionArea,\n  CardHeader,\n  Collapse,\n  Typography,\n} from \"@mui/material\";\nimport { CharacterKey } from \"../types/consts\";\nimport CardLight from \"./CardLight\";\nimport characterAssets from \"../data/Characters\";\nimport { TravelerElementKey } from \"../types/traveler\";\nimport CardContentEvenPadding from \"./CardContentEvenPadding\";\nimport { useState } from \"react\";\nimport { Constellation } from \"../types/Character\";\n\ninterface ConstellationCardProps {\n  constellation: Constellation;\n  characterKey: CharacterKey;\n  travelerElement: TravelerElementKey;\n}\nconst ConstellationCard = ({\n  constellation,\n  characterKey,\n  travelerElement,\n}: ConstellationCardProps) => {\n  const index = constellation.level as 1 | 2 | 3 | 4 | 5 | 6;\n  const [expanded, setExpanded] = useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  return (\n    <CardLight sx={{ borderRadius: 4 }}>\n      <CardActionArea onClick={handleExpandClick}>\n        <CardHeader\n          title={\n            <Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>\n              {constellation.name}\n            </Typography>\n          }\n          avatar={\n            <Avatar\n              src={\n                characterKey !== \"Traveler\"\n                  ? characterAssets[characterKey][`Constellation${index}`]\n                  : characterAssets.Traveler.elements[travelerElement][\n                      `Constellation${index}`\n                    ]\n              }\n              alt={`Constellation${index}`}\n            />\n          }\n        ></CardHeader>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContentEvenPadding sx={{ whiteSpace: \"pre-wrap\" }}>\n            <Typography variant=\"body1\">{constellation.description}</Typography>\n          </CardContentEvenPadding>\n        </Collapse>\n      </CardActionArea>\n    </CardLight>\n  );\n};\nexport default ConstellationCard;\n","import { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport { allCharacterKeys, CharacterKey, ElementKey } from \"../types/consts\";\nimport { allCharInfo as allCharacterInfo } from \"../types/api\";\nimport {\n  Box,\n  Card,\n  Grid,\n  MenuItem,\n  Skeleton,\n  Stack,\n  Tab,\n  Tabs,\n  Typography,\n} from \"@mui/material\";\nimport { Suspense, useCallback, useState } from \"react\";\nimport CardContentEvenPadding from \"../components/CardContentEvenPadding\";\nimport CloseButton from \"../components/CloseButton\";\nimport CharSelectDropdown from \"../components/CharSelectDropdown\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { allTravelerElements, TravelerElementKey } from \"../types/traveler\";\nimport DropdownButton from \"../components/DropdownButton\";\nimport { theme } from \"../Theme\";\nimport StickyCard from \"../components/StickyCard\";\nimport SkillTalentCard from \"../components/SkillTalentCard\";\nimport PassiveTalentCard from \"../components/PassiveTalentCard\";\nimport ConstellationCard from \"../components/ConstellationCard\";\nimport {\n  CharacterEx,\n  Constellation,\n  PassiveTalent,\n  SkillTalent,\n} from \"../types/Character\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n};\n\nconst a11yProps = (index: number) => {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n};\n\nconst PageCharacter = () => {\n  const navigate = useNavigate();\n  const onClose = useCallback(() => navigate(\"/\"), [navigate]);\n\n  const { characterKey } = useParams<{ characterKey?: CharacterKey }>();\n  const invalidKey = !allCharacterKeys.includes((characterKey as any) ?? \"\");\n  if (invalidKey) return <Navigate to=\"/\" />;\n  return (\n    <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n      <Suspense\n        fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}\n      >\n        {characterKey && (\n          <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />\n        )}\n      </Suspense>\n    </Box>\n  );\n};\n\ninterface CharacterDisplayCardProps {\n  characterKey: CharacterKey;\n  onClose?: () => void;\n}\n\nconst CharacterDisplayCard = ({\n  characterKey,\n  onClose,\n}: CharacterDisplayCardProps) => {\n  const [buildTab, setBuildTab] = useState(0);\n  const handleBuildChange = (_e: React.SyntheticEvent, newValue: number) => {\n    setBuildTab(newValue);\n  };\n  const [travelerElement, setTravelerElement] =\n    useLocalStorage<TravelerElementKey>(\"travelerElement\", \"anemo\");\n  const travelerId = `traveler-${travelerElement}`;\n  const isTraveler = characterKey === \"Traveler\";\n\n  const characterInfo = allCharacterInfo.find((char) =>\n    isTraveler ? char.id === travelerId : char.characterKey === characterKey\n  ) as CharacterEx;\n  console.log(characterInfo);\n\n  return (\n    <>\n      <StickyCard>\n        <CardContentEvenPadding\n          sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}\n        >\n          <Box display=\"flex\">\n            <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\n              <CharSelectDropdown\n                characterKey={characterKey}\n                characterName={characterInfo.name}\n                color={\n                  (characterInfo.vision_key.toLowerCase() as ElementKey) ??\n                  \"success\"\n                }\n              />\n              {isTraveler && (\n                <DropdownButton\n                  variant=\"outlined\"\n                  color={travelerElement}\n                  title={<strong>{travelerElement}</strong>}\n                  sx={{ borderRadius: 4 }}\n                >\n                  {allTravelerElements.map((ele) => (\n                    <MenuItem\n                      key={ele}\n                      selected={ele === travelerElement}\n                      disabled={ele === travelerElement}\n                      onClick={() => setTravelerElement(ele)}\n                    >\n                      <strong>\n                        {ele.charAt(0).toUpperCase() + ele.slice(1)}\n                      </strong>\n                    </MenuItem>\n                  ))}\n                </DropdownButton>\n              )}\n            </Box>\n            {!!onClose && (\n              <CloseButton\n                onClick={onClose}\n                sx={{ borderRadius: 4 }}\n                aria-label=\"close\"\n              />\n            )}\n          </Box>\n          <Tabs\n            value={buildTab}\n            onChange={handleBuildChange}\n            aria-label=\"build tabs\"\n            variant=\"fullWidth\"\n            TabIndicatorProps={{\n              sx: {\n                backgroundColor:\n                  theme.palette[\n                    (characterInfo.vision_key.toLowerCase() as ElementKey) ??\n                      \"primary\"\n                  ].main,\n              },\n            }}\n          >\n            <Tab\n              label=\"Item one\"\n              {...a11yProps(0)}\n              sx={{\n                color: `${\n                  theme.palette[\n                    (characterInfo.vision_key.toLowerCase() as ElementKey) ??\n                      \"primary\"\n                  ].main\n                } !important`,\n              }}\n            />\n            <Tab\n              label=\"Item two\"\n              {...a11yProps(1)}\n              sx={{\n                color: `${\n                  theme.palette[\n                    (characterInfo.vision_key.toLowerCase() as ElementKey) ??\n                      \"primary\"\n                  ].main\n                } !important`,\n              }}\n            />\n          </Tabs>\n        </CardContentEvenPadding>\n      </StickyCard>\n      <Suspense\n        fallback={\n          <Skeleton\n            variant=\"rectangular\"\n            sx={{ width: \"100%\", height: \"100%\", minHeight: 5000 }}\n          />\n        }\n      >\n        <Card sx={{ borderRadius: 4 }}>\n          <CardContentEvenPadding>\n            <Stack flexDirection=\"column\" gap={2}>\n              <Typography variant=\"h5\">Build Info</Typography>\n              <TabPanel value={buildTab} index={0}>\n                Content one\n              </TabPanel>\n              <TabPanel value={buildTab} index={1}>\n                Content two\n              </TabPanel>\n            </Stack>\n          </CardContentEvenPadding>\n        </Card>\n        <Card sx={{ borderRadius: 4 }}>\n          <CardContentEvenPadding>\n            <Stack flexDirection=\"column\" gap={2}>\n              <Typography variant=\"h5\">Skills</Typography>\n              <Grid container spacing={2}>\n                {characterInfo.skillTalents.map(\n                  (skillTalent: SkillTalent, index: number) => (\n                    <Grid\n                      item\n                      xs={12}\n                      sm={characterInfo.skillTalents.length < 4 ? 12 : 6}\n                      md={\n                        characterInfo.skillTalents.length < 4\n                          ? 12 / characterInfo.skillTalents.length\n                          : 6\n                      }\n                      lg={12 / characterInfo.skillTalents.length}\n                      key={index}\n                    >\n                      <SkillTalentCard\n                        skillTalent={skillTalent}\n                        characterKey={characterKey}\n                        characterInfo={characterInfo}\n                        travelerElement={travelerElement}\n                      />\n                    </Grid>\n                  )\n                )}\n              </Grid>\n              <Typography variant=\"h5\">Passives</Typography>\n              <Grid container spacing={2}>\n                {characterInfo.passiveTalents.map(\n                  (passive: PassiveTalent, index: number) => {\n                    return (\n                      <Grid\n                        item\n                        xs={12}\n                        sm={12}\n                        md={isTraveler ? 6 : 4}\n                        lg={isTraveler ? 6 : 4}\n                        key={index}\n                      >\n                        <PassiveTalentCard\n                          passiveTalent={passive}\n                          characterKey={characterKey}\n                          travelerElement={travelerElement}\n                          index={(index + 1) as 1 | 2 | 3}\n                        />\n                      </Grid>\n                    );\n                  }\n                )}\n              </Grid>\n              <Typography variant=\"h5\">\n                Constellations - {characterInfo.constellation}\n              </Typography>\n              <Grid container spacing={2}>\n                {characterInfo.constellations.map(\n                  (constellation: Constellation, index: number) => {\n                    return (\n                      <Grid item xs={12} sm={12} md={4} lg={4} key={index}>\n                        <ConstellationCard\n                          constellation={constellation}\n                          characterKey={characterKey}\n                          travelerElement={travelerElement}\n                        />\n                      </Grid>\n                    );\n                  }\n                )}\n              </Grid>\n            </Stack>\n          </CardContentEvenPadding>\n        </Card>\n      </Suspense>\n    </>\n  );\n};\n\nexport default PageCharacter;\n"],"names":["large","props","Button","variant","color","startIcon","Close","sx","p","minWidth","styled","theme","display","width","height","lineHeight","verticalAlign","marginTop","spacing","marginLeft","marginRight","marginBottom","characterKey","characterName","navigate","useNavigate","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","charKey","borderRadius","id","onClick","e","currentTarget","src","characterAssets","IconSide","alt","Menu","onClose","MenuListProps","allCharacters","char","MenuItem","selected","name","Card","backgroundColor","skillTalent","characterInfo","travelerElement","expanded","setExpanded","skillType","type","CardActionArea","CardHeader","title","Typography","textAlign","avatar","Avatar","getWeaponIcon","weapon_type","toLowerCase","Collapse","in","timeout","unmountOnExit","CardContentEvenPadding","whiteSpace","dangerouslySetInnerHTML","__html","description","split","map","line","length","join","passiveTalent","index","constellation","level","TabPanel","children","value","other","role","hidden","a11yProps","CharacterDisplayCard","buildTab","setBuildTab","useLocalStorage","setTravelerElement","travelerId","isTraveler","allCharacterInfo","console","log","StickyCard","flexDirection","gap","Box","flexWrap","flexGrow","vision_key","DropdownButton","allTravelerElements","ele","disabled","charAt","toUpperCase","slice","Tabs","onChange","_e","newValue","TabIndicatorProps","main","Tab","label","Suspense","fallback","Skeleton","minHeight","Stack","Grid","container","skillTalents","item","xs","sm","md","lg","passiveTalents","passive","constellations","useCallback","useParams","allCharacterKeys","to","my"],"sourceRoot":""}