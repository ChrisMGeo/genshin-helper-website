{"version":3,"file":"static/js/756.e6424f14.chunk.js","mappings":"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","sources":["components/CloseButton.tsx","components/ThumbSide.tsx","components/CharSelectDropdown.tsx","pages/PageCharacter.tsx"],"sourcesContent":["import { Close } from \"@mui/icons-material\";\nimport { Button, ButtonProps } from \"@mui/material\";\ntype CloseButtonProps = ButtonProps & {\n  large?: boolean;\n};\nexport default function CloseButton({\n  large = false,\n  ...props\n}: CloseButtonProps) {\n  if (large)\n    return (\n      <Button variant=\"outlined\" color=\"error\" startIcon={<Close />} {...props}>\n        Close\n      </Button>\n    );\n  return (\n    <Button\n      variant=\"outlined\"\n      color=\"error\"\n      sx={{ p: 1, minWidth: 0 }}\n      {...props}\n    >\n      <Close />\n    </Button>\n  );\n}\n","import { styled } from \"@mui/system\";\n\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\n  display: \"inline-block\",\n  width: \"auto\",\n  height: `2.3em`,\n  lineHeight: 1,\n  verticalAlign: \"text-bottom\",\n  marginTop: theme.spacing(-3),\n  marginLeft: theme.spacing(-1.25),\n  marginRight: theme.spacing(-1),\n  marginBottom: theme.spacing(-1),\n}));\n\nexport default ThumbSide;\n","import { Button, Menu, MenuItem } from \"@mui/material\";\nimport { useState } from \"react\";\nimport characterAssets from \"../data/Characters\";\nimport { CharacterKey, ElementKey } from \"../types/consts\";\nimport ThumbSide from \"./ThumbSide\";\nimport { allCharInfo as allCharacterInfo } from \"../types/api\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface CharSelectDropdownProps {\n  characterKey: CharacterKey;\n  characterName?: string;\n  color?:\n    | \"success\"\n    | \"inherit\"\n    | \"primary\"\n    | \"secondary\"\n    | \"error\"\n    | \"info\"\n    | \"warning\"\n    | ElementKey;\n}\n\nexport default function CharSelectDropdown({\n  characterKey,\n  characterName,\n  color = \"success\",\n}: CharSelectDropdownProps) {\n  const navigate = useNavigate();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleClose = (charKey?: string) => {\n    setAnchorEl(null);\n    if (charKey) navigate(`/${charKey}`);\n  };\n  return (\n    <>\n      <Button\n        sx={{ borderRadius: 4 }}\n        id=\"character-select-button\"\n        onClick={handleClick}\n        color={color}\n        variant=\"outlined\"\n        aria-controls={open ? \"basic-menu-open\" : \"basic-menu-close\"}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : \"false\"}\n        startIcon={\n          <ThumbSide\n            src={characterAssets[characterKey].IconSide}\n            alt={characterName}\n          />\n        }\n      >\n        {characterName ?? \"Select a Character\"}\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={() => handleClose()}\n        MenuListProps={{ \"aria-labelledby\": \"character-select-button\" }}\n      >\n        {allCharacterInfo.map((char) => (\n          <MenuItem\n            key={`${char.id}`}\n            onClick={() => handleClose(char.characterKey)}\n            selected={characterKey === char.characterKey}\n          >\n            {char.name}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport { allCharacterKeys, CharacterKey, ElementKey } from \"../types/consts\";\n// import allCharacterInfo from \"../data/Characters/allCharacterInfo.json\";\nimport { allCharInfo as allCharacterInfo } from \"../types/api\";\nimport { Box, Card, MenuItem, Skeleton, Tab, Tabs } from \"@mui/material\";\nimport { Suspense, useCallback, useState } from \"react\";\n// import characterAssets from \"../data/Characters\";\nimport CardContentEvenPadding from \"../components/CardContentEvenPadding\";\nimport CloseButton from \"../components/CloseButton\";\nimport CharSelectDropdown from \"../components/CharSelectDropdown\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { allTravelerElements, TravelerElementKey } from \"../types/traveler\";\nimport DropdownButton from \"../components/DropdownButton\";\nimport { theme } from \"../Theme\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n};\n\nconst a11yProps = (index: number) => {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n};\n\ninterface PageCharacterProps {\n  headerHeight: number;\n}\n\nconst PageCharacter = ({ headerHeight }: PageCharacterProps) => {\n  const navigate = useNavigate();\n  const onClose = useCallback(() => navigate(\"/\"), [navigate]);\n\n  const { characterKey } = useParams<{ characterKey?: CharacterKey }>();\n  const invalidKey = !allCharacterKeys.includes((characterKey as any) ?? \"\");\n  if (invalidKey) return <Navigate to=\"/\" />;\n  return (\n    <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n      <Suspense\n        fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}\n      >\n        {characterKey && (\n          <CharacterDisplayCard\n            characterKey={characterKey}\n            onClose={onClose}\n            headerHeight={headerHeight}\n          />\n        )}\n      </Suspense>\n    </Box>\n  );\n};\n\ninterface CharacterDisplayCardProps extends PageCharacterProps {\n  characterKey: CharacterKey;\n  onClose?: () => void;\n}\n\nconst CharacterDisplayCard = ({\n  characterKey,\n  onClose,\n  headerHeight,\n}: CharacterDisplayCardProps) => {\n  const [buildTab, setBuildTab] = useState(0);\n  const handleBuildChange = (_e: React.SyntheticEvent, newValue: number) => {\n    setBuildTab(newValue);\n  };\n  const [travelerElement, setTravelerElement] =\n    useLocalStorage<TravelerElementKey>(\"travelerElement\", \"anemo\");\n  const travelerId = `traveler-${travelerElement}`;\n  const isTraveler = characterKey === \"Traveler\";\n\n  const characterInfo = allCharacterInfo.find((char) =>\n    isTraveler ? char.id === travelerId : char.characterKey === characterKey\n  ) as any;\n  console.log(characterInfo);\n\n  return (\n    <>\n      <Card\n        sx={{\n          borderRadius: 4,\n          position: \"sticky\",\n          top: `${headerHeight + 8}px`,\n          zIndex: 2,\n        }}\n      >\n        <CardContentEvenPadding\n          sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}\n        >\n          <Box display=\"flex\">\n            <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\n              <CharSelectDropdown\n                characterKey={characterKey}\n                characterName={characterInfo.name}\n                color={\n                  (characterInfo.vision_key.toLowerCase() as ElementKey) ??\n                  \"success\"\n                }\n              />\n              {isTraveler && (\n                <DropdownButton\n                  variant=\"outlined\"\n                  color={travelerElement}\n                  title={<strong>{travelerElement}</strong>}\n                  sx={{ borderRadius: 4 }}\n                >\n                  {allTravelerElements.map((ele) => (\n                    <MenuItem\n                      key={ele}\n                      selected={ele === travelerElement}\n                      disabled={ele === travelerElement}\n                      onClick={() => setTravelerElement(ele)}\n                    >\n                      <strong>\n                        {ele.charAt(0).toUpperCase() + ele.slice(1)}\n                      </strong>\n                    </MenuItem>\n                  ))}\n                </DropdownButton>\n              )}\n            </Box>\n            {!!onClose && (\n              <CloseButton\n                onClick={onClose}\n                sx={{ borderRadius: 4 }}\n                aria-label=\"close\"\n              />\n            )}\n          </Box>\n          <Tabs\n            value={buildTab}\n            onChange={handleBuildChange}\n            aria-label=\"build tabs\"\n            variant=\"fullWidth\"\n            TabIndicatorProps={{\n              sx: {\n                backgroundColor:\n                  theme.palette[\n                    (characterInfo.vision_key.toLowerCase() as ElementKey) ??\n                      \"primary\"\n                  ].main,\n              },\n            }}\n          >\n            <Tab\n              label=\"Item one\"\n              {...a11yProps(0)}\n              sx={{\n                color: `${\n                  theme.palette[\n                    (characterInfo.vision_key.toLowerCase() as ElementKey) ??\n                      \"primary\"\n                  ].main\n                } !important`,\n              }}\n            />\n            <Tab\n              label=\"Item two\"\n              {...a11yProps(1)}\n              sx={{\n                color: `${\n                  theme.palette[\n                    (characterInfo.vision_key.toLowerCase() as ElementKey) ??\n                      \"primary\"\n                  ].main\n                } !important`,\n              }}\n            />\n          </Tabs>\n        </CardContentEvenPadding>\n      </Card>\n      <div id=\"back-to-top-anchor\" />\n      <Suspense\n        fallback={\n          <Skeleton\n            variant=\"rectangular\"\n            sx={{ width: \"100%\", height: \"100%\", minHeight: 5000 }}\n          />\n        }\n      >\n        <Card sx={{ borderRadius: 4 }}>\n          <CardContentEvenPadding>\n            <TabPanel value={buildTab} index={0}>\n              Content one\n            </TabPanel>\n            <TabPanel value={buildTab} index={1}>\n              Content two\n            </TabPanel>\n          </CardContentEvenPadding>\n        </Card>\n      </Suspense>\n    </>\n  );\n};\n\nexport default PageCharacter;\n"],"names":["CloseButton","large","props","Button","variant","color","startIcon","Close","sx","p","minWidth","styled","theme","display","width","height","lineHeight","verticalAlign","marginTop","spacing","marginLeft","marginRight","marginBottom","CharSelectDropdown","characterKey","characterName","navigate","useNavigate","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","charKey","borderRadius","id","onClick","e","currentTarget","src","characterAssets","IconSide","alt","Menu","onClose","MenuListProps","allCharacterInfo","char","MenuItem","selected","name","TabPanel","children","value","index","other","role","hidden","a11yProps","CharacterDisplayCard","headerHeight","buildTab","setBuildTab","useLocalStorage","travelerElement","setTravelerElement","travelerId","isTraveler","characterInfo","console","log","Card","position","top","zIndex","CardContentEvenPadding","flexDirection","gap","Box","flexWrap","flexGrow","vision_key","toLowerCase","DropdownButton","title","allTravelerElements","ele","disabled","charAt","toUpperCase","slice","Tabs","onChange","_e","newValue","TabIndicatorProps","backgroundColor","main","Tab","label","Suspense","fallback","Skeleton","minHeight","useCallback","useParams","allCharacterKeys","to","my"],"sourceRoot":""}