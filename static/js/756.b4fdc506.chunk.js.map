{"version":3,"file":"static/js/756.b4fdc506.chunk.js","mappings":"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","sources":["components/CloseButton.tsx","components/ThumbSide.tsx","components/CharSelectDropdown.tsx","pages/PageCharacter.tsx"],"sourcesContent":["import { Close } from \"@mui/icons-material\";\r\nimport { Button, ButtonProps } from \"@mui/material\";\r\ntype CloseButtonProps = ButtonProps & {\r\n  large?: boolean;\r\n};\r\nexport default function CloseButton({\r\n  large = false,\r\n  ...props\r\n}: CloseButtonProps) {\r\n  if (large)\r\n    return (\r\n      <Button variant=\"outlined\" color=\"error\" startIcon={<Close />} {...props}>\r\n        Close\r\n      </Button>\r\n    );\r\n  return (\r\n    <Button\r\n      variant=\"outlined\"\r\n      color=\"error\"\r\n      sx={{ p: 1, minWidth: 0 }}\r\n      {...props}\r\n    >\r\n      <Close />\r\n    </Button>\r\n  );\r\n}\r\n","import { styled } from \"@mui/system\";\r\n\r\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\r\n  display: \"inline-block\",\r\n  width: \"auto\",\r\n  height: `2.3em`,\r\n  lineHeight: 1,\r\n  verticalAlign: \"text-bottom\",\r\n  marginTop: theme.spacing(-3),\r\n  marginLeft: theme.spacing(-1.25),\r\n  marginRight: theme.spacing(-1),\r\n  marginBottom: theme.spacing(-1),\r\n}));\r\n\r\nexport default ThumbSide;\r\n","import { Button, Menu, MenuItem } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport characterAssets from \"../data/Characters\";\r\nimport { CharacterKey, ElementKey } from \"../types/consts\";\r\nimport ThumbSide from \"./ThumbSide\";\r\nimport { allCharInfo as allCharacterInfo } from \"../types/api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface CharSelectDropdownProps {\r\n  characterKey: CharacterKey;\r\n  characterName?: string;\r\n  color?:\r\n    | \"success\"\r\n    | \"inherit\"\r\n    | \"primary\"\r\n    | \"secondary\"\r\n    | \"error\"\r\n    | \"info\"\r\n    | \"warning\"\r\n    | ElementKey;\r\n}\r\n\r\nexport default function CharSelectDropdown({\r\n  characterKey,\r\n  characterName,\r\n  color = \"success\",\r\n}: CharSelectDropdownProps) {\r\n  const navigate = useNavigate();\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n  const handleClose = (charKey?: string) => {\r\n    setAnchorEl(null);\r\n    if (charKey) navigate(`/${charKey}`);\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        sx={{ borderRadius: 4 }}\r\n        id=\"character-select-button\"\r\n        onClick={handleClick}\r\n        color={color}\r\n        variant=\"outlined\"\r\n        aria-controls={open ? \"basic-menu-open\" : \"basic-menu-close\"}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? \"true\" : \"false\"}\r\n        startIcon={<ThumbSide src={characterAssets[characterKey].IconSide} />}\r\n      >\r\n        {characterName ?? \"Select a Character\"}\r\n      </Button>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={() => handleClose()}\r\n        MenuListProps={{ \"aria-labelledby\": \"character-select-button\" }}\r\n      >\r\n        {allCharacterInfo.map((char) => (\r\n          <MenuItem\r\n            key={`${char.id}`}\r\n            onClick={() => handleClose(char.characterKey)}\r\n            selected={characterKey === char.characterKey}\r\n          >\r\n            {char.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\nimport { allCharacterKeys, CharacterKey, ElementKey } from \"../types/consts\";\r\n// import allCharacterInfo from \"../data/Characters/allCharacterInfo.json\";\r\nimport { allCharInfo as allCharacterInfo } from \"../types/api\";\r\nimport { Box, Card, MenuItem, Skeleton, Tab, Tabs } from \"@mui/material\";\r\nimport { Suspense, useCallback, useState } from \"react\";\r\n// import characterAssets from \"../data/Characters\";\r\nimport CardContentEvenPadding from \"../components/CardContentEvenPadding\";\r\nimport CloseButton from \"../components/CloseButton\";\r\nimport CharSelectDropdown from \"../components/CharSelectDropdown\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\nimport { allTravelerElements, TravelerElementKey } from \"../types/traveler\";\r\nimport DropdownButton from \"../components/DropdownButton\";\r\nimport { theme } from \"../Theme\";\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst a11yProps = (index: number) => {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\ninterface PageCharacterProps {\r\n  headerHeight: number;\r\n}\r\n\r\nconst PageCharacter = ({ headerHeight }: PageCharacterProps) => {\r\n  const navigate = useNavigate();\r\n  const onClose = useCallback(() => navigate(\"/\"), [navigate]);\r\n\r\n  const { characterKey } = useParams<{ characterKey?: CharacterKey }>();\r\n  const invalidKey = !allCharacterKeys.includes((characterKey as any) ?? \"\");\r\n  if (invalidKey) return <Navigate to=\"/\" />;\r\n  return (\r\n    <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n      <Suspense\r\n        fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}\r\n      >\r\n        {characterKey && (\r\n          <CharacterDisplayCard\r\n            characterKey={characterKey}\r\n            onClose={onClose}\r\n            headerHeight={headerHeight}\r\n          />\r\n        )}\r\n      </Suspense>\r\n    </Box>\r\n  );\r\n};\r\n\r\ninterface CharacterDisplayCardProps extends PageCharacterProps {\r\n  characterKey: CharacterKey;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst CharacterDisplayCard = ({\r\n  characterKey,\r\n  onClose,\r\n  headerHeight,\r\n}: CharacterDisplayCardProps) => {\r\n  const [buildTab, setBuildTab] = useState(0);\r\n  const handleBuildChange = (_e: React.SyntheticEvent, newValue: number) => {\r\n    setBuildTab(newValue);\r\n  };\r\n  const [travelerElement, setTravelerElement] =\r\n    useLocalStorage<TravelerElementKey>(\"travelerElement\", \"anemo\");\r\n  const travelerId = `traveler-${travelerElement}`;\r\n  const isTraveler = characterKey === \"Traveler\";\r\n\r\n  const characterInfo = allCharacterInfo.find((char) =>\r\n    isTraveler ? char.id === travelerId : char.characterKey === characterKey\r\n  ) as any;\r\n  console.log(characterInfo);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        sx={{\r\n          borderRadius: 4,\r\n          position: \"sticky\",\r\n          top: `${headerHeight + 8}px`,\r\n          zIndex: 2,\r\n        }}\r\n      >\r\n        <CardContentEvenPadding\r\n          sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}\r\n        >\r\n          <Box display=\"flex\">\r\n            <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\r\n              <CharSelectDropdown\r\n                characterKey={characterKey}\r\n                characterName={characterInfo.name}\r\n                color={\r\n                  (characterInfo.vision_key.toLowerCase() as ElementKey) ??\r\n                  \"success\"\r\n                }\r\n              />\r\n              {isTraveler && (\r\n                <DropdownButton\r\n                  variant=\"outlined\"\r\n                  color={travelerElement}\r\n                  title={<strong>{travelerElement}</strong>}\r\n                  sx={{ borderRadius: 4 }}\r\n                >\r\n                  {allTravelerElements.map((ele) => (\r\n                    <MenuItem\r\n                      key={ele}\r\n                      selected={ele === travelerElement}\r\n                      disabled={ele === travelerElement}\r\n                      onClick={() => setTravelerElement(ele)}\r\n                    >\r\n                      <strong>\r\n                        {ele.charAt(0).toUpperCase() + ele.slice(1)}\r\n                      </strong>\r\n                    </MenuItem>\r\n                  ))}\r\n                </DropdownButton>\r\n              )}\r\n            </Box>\r\n            {!!onClose && (\r\n              <CloseButton onClick={onClose} sx={{ borderRadius: 4 }} />\r\n            )}\r\n          </Box>\r\n          <Tabs\r\n            value={buildTab}\r\n            onChange={handleBuildChange}\r\n            aria-label=\"build tabs\"\r\n            variant=\"fullWidth\"\r\n            TabIndicatorProps={{\r\n              sx: {\r\n                backgroundColor:\r\n                  theme.palette[\r\n                    (characterInfo.vision_key.toLowerCase() as ElementKey) ??\r\n                      \"primary\"\r\n                  ].main,\r\n              },\r\n            }}\r\n          >\r\n            <Tab\r\n              label=\"Item one\"\r\n              {...a11yProps(0)}\r\n              sx={{\r\n                color: `${\r\n                  theme.palette[\r\n                    (characterInfo.vision_key.toLowerCase() as ElementKey) ??\r\n                      \"primary\"\r\n                  ].main\r\n                } !important`,\r\n              }}\r\n            />\r\n            <Tab\r\n              label=\"Item two\"\r\n              {...a11yProps(1)}\r\n              sx={{\r\n                color: `${\r\n                  theme.palette[\r\n                    (characterInfo.vision_key.toLowerCase() as ElementKey) ??\r\n                      \"primary\"\r\n                  ].main\r\n                } !important`,\r\n              }}\r\n            />\r\n          </Tabs>\r\n        </CardContentEvenPadding>\r\n      </Card>\r\n      <div id=\"back-to-top-anchor\" />\r\n      <Suspense\r\n        fallback={\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            sx={{ width: \"100%\", height: \"100%\", minHeight: 5000 }}\r\n          />\r\n        }\r\n      >\r\n        <Card sx={{ borderRadius: 4 }}>\r\n          <CardContentEvenPadding>\r\n            <TabPanel value={buildTab} index={0}>\r\n              Content one\r\n            </TabPanel>\r\n            <TabPanel value={buildTab} index={1}>\r\n              Content two\r\n            </TabPanel>\r\n          </CardContentEvenPadding>\r\n        </Card>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageCharacter;\r\n"],"names":["CloseButton","large","props","Button","variant","color","startIcon","Close","sx","p","minWidth","styled","theme","display","width","height","lineHeight","verticalAlign","marginTop","spacing","marginLeft","marginRight","marginBottom","CharSelectDropdown","characterKey","characterName","navigate","useNavigate","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","charKey","borderRadius","id","onClick","e","currentTarget","src","characterAssets","IconSide","Menu","onClose","MenuListProps","allCharacterInfo","char","MenuItem","selected","name","TabPanel","children","value","index","other","role","hidden","a11yProps","CharacterDisplayCard","headerHeight","buildTab","setBuildTab","useLocalStorage","travelerElement","setTravelerElement","travelerId","isTraveler","characterInfo","console","log","Card","position","top","zIndex","CardContentEvenPadding","flexDirection","gap","Box","flexWrap","flexGrow","vision_key","toLowerCase","DropdownButton","title","allTravelerElements","ele","disabled","charAt","toUpperCase","slice","Tabs","onChange","_e","newValue","TabIndicatorProps","backgroundColor","main","Tab","label","Suspense","fallback","Skeleton","minHeight","useCallback","useParams","allCharacterKeys","to","my"],"sourceRoot":""}